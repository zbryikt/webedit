{"html":"<div class=\"container\"><div image=\"image\" style=\"background-image:url(/assets/img/sample/36.jpg)\" resizable=\"false\" editable=\"false\" class=\"thumb\"></div><div image=\"image\" style=\"background-image:url(/assets/img/sample/37.jpg)\" resizable=\"false\" editable=\"false\" class=\"thumb\"></div><div class=\"ctrl unsortable\"></div></div>","css":".block-image-compare .container {\n  width: 100%;\n  height: 400px;\n  position: relative;\n  overflow: hidden;\n}\n.block-image-compare .container .thumb {\n  width: 50%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  position: absolute;\n  background: #eee;\n  background-repeat: no-repeat;\n  background-position: left center;\n}\n.block-image-compare .container .thumb:nth-child(2) {\n  background-color: #ddd;\n  background-position: right center;\n  right: 0;\n  left: auto;\n}\n.block-image-compare .container .ctrl {\n  height: 100%;\n  width: 4px;\n  background: #fff;\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, 0);\n  cursor: pointer;\n}\n.block-image-compare .container .ctrl:after {\n  content: \"\\f07e\";\n  display: block;\n  font: normal normal normal 15px FontAwesome;\n  width: 32px;\n  height: 32px;\n  color: #fff;\n  background: #ccc;\n  border: 4px solid #fff;\n  border-radius: 50%;\n  padding: 5px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n","js":"// Generated by LiveScript 1.3.0\nmodule.exports = {\n  editable: false,\n  resize: function(){\n    var this$ = this;\n    return btools.qs('.container', this.block).map(function(container){\n      var box, thumbs;\n      box = container.getBoundingClientRect();\n      btools.qsAll('.thumb', this$.block).map(function(it){\n        return it.style.backgroundSize = box.width + \"px auto\";\n      });\n      btools.qs('.ctrl', this$.block).map(function(it){\n        return it.style.left = box.width * 0.5 + \"px\";\n      });\n      thumbs = btools.qsAll('.thumb', this$.block);\n      thumbs[0].style.width = box.width * 0.5 + \"px\";\n      return thumbs[1].style.width = box.width * 0.5 + \"px\";\n    });\n  },\n  init: function(){\n    var dragging, this$ = this;\n    dragging = false;\n    this.block.addEventListener('mousedown', function(e){\n      return dragging = true;\n    });\n    this.block.addEventListener('mousemove', function(e){\n      var container, box, x, thumbs;\n      container = this$.block.querySelector('.container');\n      if (!dragging || !container) {\n        return;\n      }\n      box = container.getBoundingClientRect();\n      x = e.clientX - box.x;\n      btools.qs('.ctrl', this$.block).map(function(it){\n        return it.style.left = (e.clientX - box.x) + \"px\";\n      });\n      thumbs = btools.qsAll('.thumb', this$.block);\n      thumbs[0].style.width = x + \"px\";\n      return thumbs[1].style.width = (box.width - x) + \"px\";\n    });\n    this.block.addEventListener('mouseup', function(e){\n      return dragging = false;\n    });\n    this.resizeHandler = function(){\n      return this$.resize();\n    };\n    window.addEventListener('resize', this.resizeHandler);\n    return this.resize();\n  },\n  destroy: function(){\n    return window.removeEventListener('resize', this.resizeHandler);\n  }\n};"}