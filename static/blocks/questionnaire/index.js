// Generated by LiveScript 1.3.0
module.exports = {
  custom: {
    attrs: ['score']
  },
  init: function(){
    var scoring, this$ = this;
    btools.qs('.result', this.block).map(function(it){
      return it.style.display = 'none';
    });
    btools.qs('.submit', this.block).map(function(it){
      return it.addEventListener('click', function(){
        var result, setActive;
        btools.qs('.result', this$.block).map(function(it){
          return it.style.display = 'block';
        });
        result = btools.qsAll('.choice.active', this$.block).map(function(it){
          return +(it.getAttribute('score') || 0);
        }).reduce(function(a, b){
          return a + b;
        }, 0);
        setActive = function(n, value){
          n.style.opacity = value ? 1 : 0.3;
          if (value) {
            return n.classList.add('text-danger');
          } else {
            return n.classList.remove('text-danger');
          }
        };
        return btools.qsAll('.result .card *[repeat-item]', this$.block).map(function(it){
          var ret;
          ret = /(\d+)\s*~\s*(\d+)/.exec(it.innerText);
          if (ret && result >= +ret[1] && result <= +ret[2]) {
            return setActive(it, true);
          }
          ret = /<\s*(\d+)/.exec(it.innerText);
          if (ret && result < +ret[1]) {
            return setActive(it, true);
          }
          ret = />\s*(\d+)/.exec(it.innerText);
          if (ret && result > +ret[1]) {
            return setActive(it, true);
          }
          it.style.opacity = 0.3;
          return setActive(it, false);
        });
      });
    });
    scoring = function(){
      var result;
      result = btools.qsAll('.choice.active', this.block).map(function(it){
        return +(it.getAttribute('score') || 0);
      }).reduce(function(a, b){
        return a + b;
      }, 0);
      btools.qs('.score', this.block).map(function(it){
        return it.innerText = result;
      });
      return btools.qs('.result', this.block).map(function(it){
        return it.style.display = 'none';
      });
    };
    return this.block.addEventListener('click', function(e){
      var target;
      target = e.target;
      if (!target.classList.contains('choice')) {
        return;
      }
      Array.from(target.parentNode.childNodes).map(function(it){
        if (it !== target && it.classList.contains('choice')) {
          return it.classList.remove('active');
        }
      });
      target.classList.toggle('active');
      return scoring();
    });
  }
};