// Generated by LiveScript 1.3.0
var mediumEditorFontfamilyExtension;
mediumEditorFontfamilyExtension = {};
(function(){
  var justfont, googlefont, defaultfont, defaultPlusFont, source, fonts, config;
  justfont = ['afupop08', 'chikuming', 'datx2', 'daty5', 'jf-jinxuan', 'wt064', 'xingothic-tc'];
  googlefont = ['Open Sans', 'Josefin Slab', 'Arvo', 'Lato', 'Vollkorn', 'Abril Fatface', 'PT Sans', 'PT Serif', 'Old Standard TT', 'Droid Sans', 'Work Sans', 'Playfair Display', 'Libre Franklin', 'Space Mono', 'Rubik', 'Cormorant', 'Fira Sans', 'Eczar', 'Alegreya Sans', 'Alegreya', 'Raleway', 'Merriweather', 'Anonymous Pro', 'Cabin', 'Inconsolata', 'Neuton', 'Roboto', 'Cardo', 'Inknut Antiqua', 'Bitter', 'Domine', 'Spectral', 'Proza Libre', 'Montserrat', 'Crimson Text', 'Karla', 'Libre Baskerville', 'Archivo Narrow', 'BioRhyme', 'Poppins', 'Roboto Slab', 'Source Serif Pro', 'Source Sans Pro', 'Lora', 'Chivo'];
  defaultfont = ['Arial', 'Arial Black', 'Helvetica', 'Helvetica Neue', 'Tahoma', 'Century Gothic', 'Times New Roman', 'Courier New', 'Verdana', 'Georgia', 'Palatino', 'Garamond', 'Trebuchet MS', 'Impact', 'Heiti TC', 'MingLiU', 'DFKai-sb'];
  defaultPlusFont = ['Comic Sans', 'Microsoft JhengHei'];
  source = function(){
    return 'default';
  };
  fonts = defaultfont;
  config = {
    name: "font-family",
    init: function(it){
      var loadFont, list, this$ = this;
      this.button = this.document.createElement('button');
      this.button.classList.add('medium-editor-action', 'medium-editor-font-family');
      this.button.innerHTML = "<i class='fa fa-font'></i>";
      this.on(this.button, 'click', function(e){
        return this$.handleClick(e);
      });
      loadFont = function(font){
        return xfl.load(font.path, function(){
          this$.base.importSelection(this$.selectionState);
          this$.document.execCommand('styleWithCSS', false, true);
          this$.document.execCommand('fontName', false, font.name);
          this$.trigger('editableInput', {
            font: {
              name: font.name,
              source: source(font.name)
            }
          }, list);
          return list.style.display = 'none';
        });
      };
      this.list = list = document.createElement("div");
      list.classList.add('medium-editor-font-family-list', 'medium-editor-sublist', 'centered');
      document.body.appendChild(list);
      list.innerHTML = (["<div class='list'>", "<div class='item' data-font='default'>&nbsp;Default</div>"].concat((function(){
        var i$, ref$, len$, results$ = [];
        for (i$ = 0, len$ = (ref$ = fonts).length; i$ < len$; ++i$) {
          it = ref$[i$];
          results$.push("<div class='item' data-font='" + it + "'><img src='/assets/img/fonts/" + it + ".png'></div>");
        }
        return results$;
      }()), ["</div>"])).join('');
      this.subscribe('hideToolbar', function(){
        return this$.list.style.display = 'none';
      });
      list.style.display = 'none';
      return list.addEventListener('click', function(e){
        var fontname;
        if (!(e.target && e.target.getAttribute)) {
          return;
        }
        fontname = e.target.getAttribute('data-font') || e.target.parentNode.getAttribute('data-font');
        this$.base.importSelection(this$.selectionState);
        this$.document.execCommand('styleWithCSS', false, true);
        this$.document.execCommand('fontName', false, fontname);
        this$.trigger('editableInput', {
          font: {
            name: fontname,
            source: source(fontname)
          }
        }, e.target);
        return list.style.display = 'none';
      });
    },
    getButton: function(){
      return this.button;
    },
    handleClick: function(event){
      var ref, box;
      event.preventDefault();
      event.stopPropagation();
      this.selectionState = this.base.exportSelection();
      ref = this.document.querySelector(".medium-editor-toolbar-active .medium-editor-font-family").parentNode;
      box = ref.getBoundingClientRect();
      this.list.style.top = ((box.y + box.height) + document.scrollingElement.scrollTop) + "px";
      this.list.style.left = box.x + "px";
      return this.list.style.display = 'block';
    }
  };
  return mediumEditorFontfamilyExtension = MediumEditor.Extension.extend(config);
})();