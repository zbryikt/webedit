{"html":"<h2>How to use this block</h2><p>This is a block for <b style=\"color:red\">multi-storyline interactive</b>. Once you use this block, your page will be segmented into several numbered blocks, and these blocks will be default hidden in the viewer mode.</p><p>We expect your users to interact with your content by clicking these buttons below; you can config them with the <b style=\"color:red\">block number</b> they are going to reveal after clicking.</p><p>To see the effect, <b style=\"color:red\">simply drag another block under this block</b>; a label with number will appear in the left below this block.</p><br/><br/><div repeat-host=\"repeat-host\" class=\"text-center\"><div repeat-item=\"repeat-item\" edit-text=\"branch-target\" edit-text-placeholder=\"enter segment number to reveal\" class=\"btn btn-lg btn-primary mr-2 mb-2\">Choice 1</div><div repeat-item=\"repeat-item\" edit-text=\"branch-target\" edit-text-placeholder=\"enter segment number to reveal\" class=\"btn btn-lg btn-primary mr-2 mb-2\">Choice 2</div><div repeat-item=\"repeat-item\" edit-text=\"branch-target\" edit-text-placeholder=\"enter segment number to reveal\" class=\"btn btn-lg btn-primary mr-2 mb-2\">Choice 3</div></div>","css":".page-viewer *[branch-id] {\n  display: none;\n}\n.block-branch {\n  position: relative;\n}\n.block-branch .hint {\n  position: absolute;\n  z-index: 1;\n  bottom: -40px;\n  left: 0;\n  padding: 5px 10px;\n  background: #e91e63;\n  font-size: 1.5em;\n  font-weight: 900;\n  color: #fff;\n  font-family: courier new;\n  line-height: 1.3em;\n}\n.block-branch:last-child .hint {\n  display: none;\n}\n.block-branch-no1,\n.block-branch-no2,\n.block-branch-no3,\n.block-branch-no4 {\n  border-left: 4px solid #e91e63;\n}\n.block-branch-no2 {\n  border-left-color: #673ab7;\n}\n.block-branch-no3 {\n  border-left-color: #2196f3;\n}\n.block-branch-no4 {\n  border-left-color: #4caf50;\n}\n.block-branch-no2.hint {\n  border-left: none;\n  background: #673ab7;\n}\n.block-branch-no3.hint {\n  border-left: none;\n  background: #2196f3;\n}\n.block-branch-no4.hint {\n  border-left: none;\n  background: #4caf50;\n}\n@media (max-width: 768px) {\n  .block-branch .btn {\n    display: block;\n  }\n}\n","js":"// Generated by LiveScript 1.3.0\nmodule.exports = {\n  custom: {\n    attrs: ['branch-id', 'branch-target']\n  },\n  handle: {\n    change: function(node, blocks, viewMode){\n      var ref$, last, idx, update, i$, to$, i;\n      viewMode == null && (viewMode = false);\n      blocks = btools.qsAll('.block-item');\n      ref$ = [-1, -1], last = ref$[0], idx = ref$[1];\n      if (viewMode && this.inited) {\n        return;\n      }\n      if (viewMode) {\n        this.inited = true;\n      }\n      update = function(start, end, idx){\n        var i$, i, results$ = [];\n        for (i$ = start; i$ <= end; ++i$) {\n          i = i$;\n          if (!viewMode) {\n            blocks[i].classList.add(\"block-branch-no\" + (1 + idx % 3), 'block-branch-no');\n          }\n          results$.push(blocks[i].setAttribute('branch-id', idx + 1));\n        }\n        return results$;\n      };\n      for (i$ = 0, to$ = blocks.length; i$ < to$; ++i$) {\n        i = i$;\n        blocks[i].classList.remove('block-branch-no1', 'block-branch-no2', 'block-branch-no3');\n        if (blocks[i].classList.contains(\"block-branch\")) {\n          if (last >= 0) {\n            update(last, i, idx);\n          }\n          ref$ = [i + 1, idx + 1], last = ref$[0], idx = ref$[1];\n          btools.qs('.hint', blocks[i]).map(fn$);\n        }\n      }\n      if (last >= 0) {\n        return update(last, blocks.length - 1, idx);\n      }\n      function fn$(hint){\n        hint.classList.remove('block-branch-no1', 'block-branch-no2', 'block-branch-no3');\n        hint.classList.add(\"block-branch-no\" + (1 + idx % 3));\n        return hint.innerText = idx + 1;\n      }\n    }\n  },\n  destroy: function(){\n    if (btools.qsAll('.block-branch').length <= 1) {\n      return btools.qsAll('.block-branch-no').map(function(it){\n        return it.classList.remove('block-branch-no', 'block-branch-no1', 'block-branch-no2', 'block-branch-no3');\n      });\n    }\n  },\n  wrap: function(node, collab, viewMode, branching){\n    var hint;\n    branching == null && (branching = false);\n    if (!branching) {\n      this.handle.change(node, null, viewMode);\n    }\n    if (!viewMode) {\n      hint = node.querySelector('.hint');\n      if (!hint) {\n        hint = document.createElement(\"div\");\n        hint.classList.add('hint');\n        node.appendChild(hint);\n      }\n      return;\n    }\n    return node.addEventListener('click', function(e){\n      var branchId, target, ref$, first, last;\n      branchId = (e.target.getAttribute && e.target.getAttribute('branch-target')) || null;\n      if (!branchId) {\n        return;\n      }\n      target = e.target;\n      while (target && target.classList) {\n        if (target.classList.contains('block-branch')) {\n          break;\n        }\n        target = target.parentNode;\n      }\n      if (!target.classList) {\n        return;\n      }\n      ref$ = [null, target], first = ref$[0], last = ref$[1];\n      btools.qsAll(\"[branch-id]\").map(function(it){\n        var parent, newnode;\n        if (it.getAttribute('branch-id') !== branchId) {\n          return;\n        }\n        parent = it.parentNode;\n        newnode = it.cloneNode(true);\n        newnode.removeAttribute('branch-id');\n        parent.insertBefore(newnode, last.nextSibling);\n        blocksManager.code.wrap(newnode, viewMode, !!newnode.classList.contains('block-branch'));\n        last = newnode;\n        if (!first) {\n          first = newnode;\n        }\n        return newnode.style.display = 'block';\n      });\n      return setTimeout(function(){\n        var box, src, des, count, delta, handler;\n        if (last.classList.contains('block-branch')) {\n          box = last.getBoundingClientRect();\n          src = document.scrollingElement.scrollTop;\n          des = box.y + src + box.height + 80;\n        } else {\n          box = first.getBoundingClientRect();\n          src = document.scrollingElement.scrollTop;\n          des = box.y + src - 80;\n        }\n        count = 0;\n        delta = 0.001;\n        return handler = setInterval(function(){\n          var value;\n          value = src + (des - src) * delta * count * count;\n          window.scrollTo(0, value);\n          count = count + 1;\n          if (value >= des) {\n            return clearInterval(handler);\n          }\n        }, 10);\n      }, 250);\n    });\n  }\n};"}