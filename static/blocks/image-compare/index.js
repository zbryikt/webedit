// Generated by LiveScript 1.3.0
module.exports = {
  handle: {
    resize: function(node){
      return btools.qs('.container', node).map(function(container){
        var box, thumbs;
        box = container.getBoundingClientRect();
        btools.qsAll('.thumb', node).map(function(it){
          return it.style.backgroundSize = box.width + "px auto";
        });
        btools.qs('.ctrl', node).map(function(it){
          return it.style.left = box.width * 0.5 + "px";
        });
        thumbs = btools.qsAll('.thumb', node);
        thumbs[0].style.width = box.width * 0.5 + "px";
        return thumbs[1].style.width = box.width * 0.5 + "px";
      });
    }
  },
  config: {
    editable: false
  },
  wrap: function(node){
    var container, dragging, this$ = this;
    container = node.querySelector('.container');
    if (!container) {
      return;
    }
    dragging = false;
    node.addEventListener('mousedown', function(e){
      return dragging = true;
    });
    node.addEventListener('mousemove', function(e){
      var box, x, thumbs;
      if (!dragging) {
        return;
      }
      box = container.getBoundingClientRect();
      x = e.clientX - box.x;
      btools.qs('.ctrl', node).map(function(it){
        return it.style.left = (e.clientX - box.x) + "px";
      });
      thumbs = btools.qsAll('.thumb', node);
      thumbs[0].style.width = x + "px";
      return thumbs[1].style.width = (box.width - x) + "px";
    });
    node.addEventListener('mouseup', function(e){
      return dragging = false;
    });
    window.addEventListener('resize', function(){
      return this$.handle.resize(node);
    });
    return this.handle.resize(node);
  }
};