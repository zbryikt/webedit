// Generated by LiveScript 1.3.0
module.exports = {
  wrap: function(node, viewMode){
    var blocks, ref$, last, idx, update, i$, to$, i;
    if (!viewMode) {
      return;
    }
    blocks = Array.from(document.querySelectorAll('.block-item'));
    ref$ = [-1, 0], last = ref$[0], idx = ref$[1];
    update = function(start, end, idx){
      var i$, i, results$ = [];
      for (i$ = start; i$ <= end; ++i$) {
        i = i$;
        if (!viewMode) {
          blocks[i].style.borderLeft = '4px solid #f00';
        }
        results$.push(blocks[i].setAttribute('branch-id', idx));
      }
      return results$;
    };
    for (i$ = 0, to$ = blocks.length; i$ < to$; ++i$) {
      i = i$;
      if (blocks[i].classList.contains("block-branch")) {
        if (last >= 0) {
          update(last, i, idx);
        }
        ref$ = [i + 1, idx + 1], last = ref$[0], idx = ref$[1];
      }
    }
    if (last >= 0) {
      update(last, blocks.length - 1, idx);
    }
    return node.addEventListener('click', function(e){
      var branchId, target, last;
      branchId = (e.target.getAttribute && e.target.getAttribute('branch-target')) || null;
      if (!branchId) {
        return;
      }
      target = e.target;
      while (target && target.classList) {
        if (target.classList.contains('block-branch')) {
          break;
        }
        target = target.parentNode;
      }
      if (!target.classList) {
        return;
      }
      last = target;
      Array.from(document.querySelectorAll("[branch-id]")).map(function(it){
        var parent, newnode;
        if (it.getAttribute('branch-id') !== branchId) {
          return;
        }
        parent = it.parentNode;
        newnode = it.cloneNode(true);
        newnode.removeAttribute('branch-id');
        parent.insertBefore(newnode, last);
        if (!newnode.classList.contains('block-branch')) {
          blocksManager.code.wrap(newnode, viewMode);
        }
        last = newnode;
        return newnode.style.display = 'block';
      });
      return setTimeout(function(){
        var box, src, des, count, delta, handler;
        box = last.getBoundingClientRect();
        src = document.scrollingElement.scrollTop;
        des = box.y + box.height + src + 80;
        count = 0;
        delta = 0.001;
        return handler = setInterval(function(){
          var value;
          value = src + (des - src) * delta * count * count;
          window.scrollTo(0, value);
          count = count + 1;
          if (value >= des) {
            return clearInterval(handler);
          }
        }, 10);
      }, 500);
    });
  }
};